<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">
	
	<context:component-scan	base-package="model" />
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- to permit access to static resources like css,js etc -->
	<http pattern = "/resources/**" security = "none"/>
	
	<!-- order should be same bcoz all viewers have authority to login page nd only users have authority to other pages -->
	<http>
		
		<!-- manage product should be available only for admin -->
		<intercept-url pattern="/manage/**" access="hasAuthority('ADMIN')" />
		
		<!-- cart should be available only for registered users NOT EVEN FOR ADMIN AND SUPPLIERS -->
		<intercept-url pattern="/cart/**" access="hasAuthority('USER')" />
		
		<!-- for viewers, registered users and admin,suppliers  -->
		<intercept-url pattern="/**" access="permitAll" />		
		
		<form-login login-page="/login" />
		
		<!-- when users try to access manageProducts or admin try to access cart it should redirect you to error page -->
		<access-denied-handler error-page="/access-denied"/>
				
		<!-- <logout /> this tag is removed. since csrf protection is enabled in our Application we cannot use this logout filter tag. we need to have a particular form to perform logout operation -->
		
		<!-- <csrf disabled = "true" /> used to disable csrf protection which is not recommended -->
	
	</http>
	<authentication-manager>
		<authentication-provider>
			<password-encoder ref="passwordEncoder" />
			<!-- dataSource comes from HibernateConfig file -->
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="select email,password,enabled from user_detail where email = ?"
				authorities-by-username-query="select email,role from user_detail where email = ?"
			/>
		</authentication-provider>
	</authentication-manager>
</beans:beans>
